#!/usr/bin/env python

##############################################################################
##
## $Id: AppletRun,v 1.15 2003/03/31 01:14:05 riemer Exp $
##
## Copyright (C) 2002 Tilo Riemer <riemer@lincvs.org>
## All rights reserved. 
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted provided that the following conditions
## are met:
##
## 1. Redistributions of source code must retain the above copyright
##    notice, this list of conditions and the following disclaimer.
## 2. Redistributions in binary form must reproduce the above copyright
##    notice, this list of conditions and the following disclaimer in the
##    documentation and/or other materials provided with the distribution.
## 3. The name of the author may not be used to endorse or promote products
##    derived from this software without specific prior written permission. 
##
## THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
## IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
## OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
## IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
## INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
## NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
## DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
## THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
## (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
## THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
##
###############################################################################


import findrox
import rox
from rox import g
import sys
from rox import applet
import time, string, os


#intervall which is used for calling apm... (milliseconds)
CHECK_INTERVALL = 10000


cur_warn_level = 0
cur_default_warn_level = 0
app_dir = ""


def update_display(battery):
	global cur_warn_level
	global cur_default_warn_level
	global app_dir
	
	battery.update()

	percent = battery.percent()
	percent_str = str(percent) + "%\n"

	hours = battery.time() / 60
	mins  = battery.time() % 60
	
	time_str = str(hours) + ":" + str(mins)

	txt = percent_str + time_str
	apm_display.set_text(txt)

	if battery.charging_state() == bq_consts.OFFLINE:
		if percent <= cur_warn_level:
			cur_warn_level = percent
			os.system(app_dir + "/alert.py " + str(cur_warn_level) + "&")
			cur_warn_level = cur_warn_level * 2 / 3	 #decrease warn level
	else:
		cur_warn_level = cur_default_warn_level
	
	return 1
	

#check run mode (applet or normal application?)
if len(sys.argv) > 1:
	main = applet.Applet(sys.argv[1])
else:
	main = rox.Window()


#init display
apm_display = g.Label("")
apm_display.set_justify(g.JUSTIFY_RIGHT)


#hack?
app_dir = sys.argv[0].split("AppletRun")[0]

#add consts path
sys.path.append(app_dir + "/Modules")


import bq_consts, apm


cur_warn_level = bq_consts.WARN_LEVEL
cur_default_warn_level = bq_consts.WARN_LEVEL

battery = apm.CApm()


update_display(battery)


	
main.set_border_width(6)
main.add(apm_display)
main.show_all()

g.timeout_add(CHECK_INTERVALL, update_display, battery)

rox.mainloop()
